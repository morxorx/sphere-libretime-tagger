name: Build LibreTime Tagger

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  APP_NAME: "LibreTime Tagger"
  SCRIPT_FILE: "libretime_tagger.py"  # Your actual filename
  MAC_ICON: "icon.icns"           # Your macOS icon
  WIN_ICON: "icon.ico"           # Use same for Windows for now

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow mutagen
    
    - name: Build Windows executable
      run: |
        pyinstaller --name="${{ env.APP_NAME }}" --windowed --onefile --icon=${{ env.WIN_ICON }} --clean ${{ env.SCRIPT_FILE }}
    
    - name: Upload Windows executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ env.APP_NAME }}.exe
        asset_name: ${{ env.APP_NAME }}-Windows.exe
        asset_content_type: application/octet-stream

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow mutagen
    
    - name: Build macOS app
      run: |
        pyinstaller --name="${{ env.APP_NAME }}" --windowed --onefile --icon=${{ env.MAC_ICON }} --clean ${{ env.SCRIPT_FILE }}
    
    - name: Create DMG package
      run: |
        brew install create-dmg
        create-dmg \
          --volname "${{ env.APP_NAME }}" \
          --volicon "${{ env.MAC_ICON }}" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "${{ env.APP_NAME }}" 175 180 \
          --hide-extension "${{ env.APP_NAME }}" \
          --app-drop-link 425 180 \
          "${{ env.APP_NAME }}-${GITHUB_REF_NAME}.dmg" \
          "dist/"
    
    - name: Upload macOS app to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ env.APP_NAME }}
        asset_name: ${{ env.APP_NAME }}-macOS
        asset_content_type: application/octet-stream
    
    - name: Upload macOS DMG to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ env.APP_NAME }}-${GITHUB_REF_NAME}.dmg
        asset_name: ${{ env.APP_NAME }}-macOS.dmg
        asset_content_type: application/octet-stream
